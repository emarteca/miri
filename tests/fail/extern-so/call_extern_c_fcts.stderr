error: Undefined Behavior: trying to reborrow from <TAG> for SharedReadOnly permission at ALLOC[0x4], but that tag does not exist in the borrow stack for this location
  --> RUSTLIB/core/src/array/equality.rs:LL:CC
   |
LL |         **self == *other
   |         ^^^^^^
   |         |
   |         trying to reborrow from <TAG> for SharedReadOnly permission at ALLOC[0x4], but that tag does not exist in the borrow stack for this location
   |         this error occurs as part of a reborrow at ALLOC[0x0..0xc]
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental
   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information
help: <TAG> was created by a retag at offsets [0x0..0xc]
  --> $DIR/call_extern_c_fcts.rs:LL:CC
   |
LL |         let slice = std::slice::from_raw_parts(arr_ptr as *const i32, 3u64 as usize);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: <TAG> was later invalidated at offsets [0x4..0x8]
  --> $DIR/call_extern_c_fcts.rs:LL:CC
   |
LL |         *arr_ptr.offset(1) = 5;
   |         ^^^^^^^^^^^^^^^^^^^^^^
   = note: backtrace:
   = note: inside `std::array::equality::<impl std::cmp::PartialEq<[i32; 3]> for &[i32]>::eq` at RUSTLIB/core/src/array/equality.rs:LL:CC
note: inside `main` at RUSTLIB/core/src/macros/mod.rs:LL:CC
  --> $DIR/call_extern_c_fcts.rs:LL:CC
   |
LL |         assert_eq!(slice, [0, 5, 2]);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to previous error

